{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","margin","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","Recipe","title","calories","image","ingredients","classes","useState","expanded","setExpanded","Card","className","CardHeader","subheader","CardMedia","CardActions","disableSpacing","IconButton","clsx","onClick","Collapse","in","timeout","unmountOnExit","CardContent","map","ingredient","Typography","paragraph","text","padding","display","alignItems","width","input","spacing","flex","iconButton","App","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipe","a","axios","get","response","data","hits","console","log","Paper","onSubmit","event","preventDefault","component","InputBase","type","value","onChange","target","placeholder","inputProps","style","Grid","container","recipe","item","xs","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ba352d6.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: 325,\r\n      margin: \"15px\",\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n  }));\r\n\r\nconst Recipe = ({title, calories, image, ingredients}) => {\r\n    const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n\r\n    return (\r\n        <div>\r\n             <Card className={classes.root}>\r\n      <CardHeader\r\n        title={title}\r\n        subheader={calories}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={image}\r\n        title={title}\r\n      />\r\n      <CardActions disableSpacing>\r\n          <div>Ingredients</div>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n    \r\n          {ingredients.map((ingredient)=> (\r\n                <Typography paragraph>{ingredient.text}</Typography>\r\n               ))}\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Recipe\r\n","import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport axios from \"axios\";\nimport Recipe from \"./Recipe\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    margin: \"10px auto\",\n    alignItems: 'center',\n    width: 400,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const APP_ID = \"fd651cc6\";\n  const APP_KEY = \"6cbc76dedcec472911da5bc2074339d8\";\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  useEffect(()=> {\n    getRecipe();\n  }, [query]);\n  const getRecipe =async() => {\n    const response = await axios.get(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n      );\n      setRecipes(response.data.hits);\n      console.log(response);\n  };\n  const updateSearch=(event)=> {\n    setSearch(event.target.value);\n  };\n  const updateQuery=(event)=> {\n    event.preventDefault();\n    setQuery(search);\n  };\n  return (\n    <div>\n      <Paper onSubmit={updateQuery} component=\"form\" className={classes.root}>\n      \n      <InputBase\n         type=\"text\" \n         value={search} \n         onChange={updateSearch}\n        className={classes.input}\n        placeholder=\"Search for Recipe\"\n        inputProps={{ 'aria-label': 'search for recipe' }}\n      />\n       <IconButton\n       type=\"submit\"\n       className={classes.input}\n       aria-label=\"search\"\n       />\n      <SearchIcon />\n    </Paper>\n    <div style={{margin:\"10px\"}}>\n      <Grid container>\n      {recipes.map((recipe)=> (\n        <Grid  item xs={3}>\n        <Recipe \n        key={recipe.recipe.label} \n        title={recipe.recipe.label} \n        calories={recipe.recipe.calories} \n        image={recipe.recipe.image} \n        ingredients={recipe.recipe.ingredients}\n        />\n        </Grid>\n      ))}\n      </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}